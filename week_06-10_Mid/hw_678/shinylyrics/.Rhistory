tofl= fl[lapply(po, length) == 2]
# packages
library(readtext)
library(dplyr)
library(holdem)
library(stringr)
library(tidyr)
library(cluster)
library(pvclust)
library(xtable)
library(plyr)
library(car)
library(ggplot2)
library(lattice)
# Read
poker<-readtext("D:/_PROJECT_/Data_Red/*.txt")
#分局
#help('strsplit')
strsplit(poker$text,"\n\n\n\n", fixed = TRUE,useBytes = TRUE)
#分局
#help('strsplit')
#strsplit(poker$text,"\n\n\n\n", fixed = TRUE,useBytes = TRUE)
#合併所有txt內賽局
u<-unlist(strsplit(poker$text,"\n\n\n\n", fixed = TRUE,useBytes = TRUE))
str(u)
#------------
fl<-strsplit(u,"\n*** FLOP ***\n", fixed = TRUE,useBytes = TRUE)
tofl= fl[lapply(po, length) == 2]
tofl= fl[lapply(fl, length) == 2]
tofl<- fl[lapply(fl, length) == 2]
tofl
fl[2]
#------------
fl<-lapply(u,function(xi)unlist(strsplit(xi,"\n*** FLOP *** ", fixed = TRUE,useBytes = TRUE)))
tofl<- fl[lapply(fl, length) == 2]
tofl[1]
turnsplit<-lapply(tofl,function(xi)unlist(strsplit(xi,"\n*** TURN *** ", fixed = TRUE,useBytes = TRUE)))
help(subset)
cuttail<- function(x){subset(turnsplit,1:2)}
lapply(turnsplit,cuttail)
cuttail<- function(x){subset(turnsplit,select=1:2)}
lapply(turnsplit,cuttail)
cuttail<- function(x){subset(turnsplit,select= 1:2)}
lapply(turnsplit,cuttail)
cuttail<- function(x){subset(turnsplit,select= 1:2)}
lapply(turnsplit,cuttail)
turnsplit[1:10]
help(grep)
grep("[a-z]", letters)
grep("[a-z]", letters)
txt <- c("arm","foot","lefroo", "bafoobar")
if(length(i <- grep("foo", txt)))
cat("'foo' appears at least once in\n\t", txt, "\n")
i # 2 and 4
txt[i]
length(i <- grep("foo", txt))
betinflop <- function(x){grep('bets',x[2])}
lappy(turnsplit,betinflop)
# packages
library(readtext)
library(holdem)
library(stringr)
library(dplyr)
library(tidyr)
library(cluster)
library(pvclust)
library(xtable)
library(plyr)
library(ggplot2)
library(car)
library(lattice)
lappy(turnsplit,betinflop)
turnsplit<-lapply(tofl,function(xi)unlist(strsplit(xi,"\n*** TURN *** ", fixed = TRUE,useBytes = TRUE)))
turnsplit[1:10]
betinflop <- function(x){grep('bets',x[2])}
lappy(turnsplit,betinflop)
lappy(turnsplit,function(x){grep('bets',x[2])})
a<-lappy(turnsplit,function(x){grep('bets',x[2])})
betinflop <- function(x){grep('bets',x[2])}
lappy(turnsplit,function(x){grep('bets',x[2])})
grep('bets',turnsplit[2])
turnsplit[1]
turnsplit[2]
grep('bets',turnsplit[[1]][2])
grep('bets',turnsplit[[1:5971]][2])
lappy(turnsplit,function(x){grep('bets',x[2])})
lappy(turnsplit,betinflop)
grep('aku08',turnsplit)
i= grep('aku08',turnsplit)
turnsplit[i]
grep('bets',turnsplit[[1:2]][2])
grep('bets',turnsplit[[1:10]][2])
grep('bets',turnsplit[[1:9]][2])
turnsplit[[2]][2]
help(subset)
turnsplit=[2]
turnsplit=2
turnsplit<-lapply(tofl,function(xi)unlist(strsplit(xi,"\n*** TURN *** ", fixed = TRUE,useBytes = TRUE)))
subset(turnsplit, select = 1:2)
betinflop <- function(x){grep('bets',x[2])}
str(turnsplit)
betinflop <- function(x){unlist(grep('bets',x[2]))}
lappy(turnsplit,betinflop)
betinflop <- function(x)unlist(grep('bets',x[2]))
lappy(turnsplit,betinflop)
betinflop <- function(x){grep('bets',x[2])}
lapply(turnsplit,betinflop)
i= lapply(turnsplit,betinflop)
i
turnsplit[i]
i= unlist(lapply(turnsplit,betinflop))
i
i= lapply(turnsplit,betinflop)
i
gsub(integer(0),0,i)
help(gsub)
gsub('integer(0)',0,i)
gsub(integer(0),0,i)
gsub(NA,0,i)
gsub( "integer(0)",0,i)
[145] "1"          "integer(0)"
gsub( "integer(0)",0,i)
turnsplit[i]
lapply(i,gsub( "integer(0)",0,i))
lapply(i,function(x)gsub( "integer(0)",0,x))
i
turnsplit[i]
i= lapply(turnsplit,betinflop)
i
turnsplit[i=1]
help(which)
which(i==1)
turnsplit[which(i==1)]
betflop<-turnsplit[which(i==1)]
str(betflop)
grep('aku08',betflop)
grep('aku08: bets',betflop)
lapply(betflop,function(x){grep('aku08: bets',x[2])})
ak= lapply(betflop,function(x){grep('aku08: bets',x[2])})
which(ak==1)
betflop[which(ak==1)]
View(betflop[which(ak==1)])
betflop[which(ak==1)]
ak_betflop= betflop[which(ak==1)]
lappy(ak_betflop,function(x){grep('aku08: posts big blind',x[1])})
lapply(ak_betflop,function(x){grep('aku08: posts big blind',x[1])})
which(lapply(ak_betflop,function(x){grep('aku08: posts big blind',x[1])})==1)
ak_betflop[which(lapply(ak_betflop,function(x){grep('aku08: posts big blind',x[1])})==1)]
ak_betflop[which(lapply(ak_betflop,function(x){grep('aku08: raises',x[1])})==1)]
length(ak_betflop)
ak_betflop[which(lapply(ak_betflop,function(x){grep('aku08: calls',x[1])})==1)]
length(ak_betflop[which(lapply(ak_betflop,function(x){grep('aku08: calls',x[1])})==1)])
length(ak_betflop[which(lapply(ak_betflop,function(x){grep('aku08: raises',x[1])})==1)])
length(ak_betflop= betflop[which(ak==1)])  #45
which(lapply(ak_betflop,function(x){grep('aku08: calls',x[1])})==1)
which(lapply(ak_betflop,function(x){grep('aku08: raises',x[1])})==1)
ak_betflop[19]
which(lapply(ak_betflop,function(x){grep('aku08: checks',x[1])})==1)
length(ak_betflop[which(lapply(ak_betflop,function(x){grep('aku08: checks',x[1])})==1)])
length(ak_betflop[which(lapply(ak_betflop,function(x){grep('aku08: raises',x[1])})==1)])
length(ak_betflop)
# przemol
pr= lapply(betflop,function(x){grep('przemol: bets',x[2])})
pr_betflop= betflop[which(pr==1)]  #45
length(pr_betflop)
pr_betflop[which(lapply(pr_betflop,function(x){grep('przemol: posts big blind',x[1])})==1)]
which(lapply(pr_betflop,function(x){grep('przemol: raises',x[1])})==1)
length(pr_betflop[which(lapply(pr_betflop,function(x){grep('przemol: raises',x[1])})==1)])
which(lapply(pr_betflop,function(x){grep('przemol: calls',x[1])})==1)
length(pr_betflop[which(lapply(pr_betflop,function(x){grep('przemol: calls',x[1])})==1)])
#which(lapply(pr_betflop,function(x){grep('przemol: raises',x[1])})==1)
length(pr_betflop[which(lapply(pr_betflop,function(x){grep('przemol: raises',x[1])})==1)])
#which(lapply(pr_betflop,function(x){grep('przemol: calls',x[1])})==1)
length(pr_betflop[which(lapply(pr_betflop,function(x){grep('przemol: calls',x[1])})==1)])
#which(lapply(pr_betflop,function(x){grep('przemol: checks',x[1])})==1)
length(pr_betflop[which(lapply(pr_betflop,function(x){grep('przemol: checks',x[1])})==1)])
length(pr_betflop[which(lapply(pr_betflop,function(x){grep('przemol: posts big blind',x[1])})==1)])
length(pr_betflop)
# przemol
pr= lapply(betflop,function(x){grep('przemol: bets',x[2])})
pr_betflop= betflop[which(pr==1)]
length(pr_betflop)
#which(lapply(pr_betflop,function(x){grep('przemol: raises',x[1])})==1)
length(pr_betflop[which(lapply(pr_betflop,function(x){grep('przemol: raises',x[1])})==1)])
#which(lapply(pr_betflop,function(x){grep('przemol: calls',x[1])})==1)
length(pr_betflop[which(lapply(pr_betflop,function(x){grep('przemol: calls',x[1])})==1)])
#which(lapply(pr_betflop,function(x){grep('przemol: checks',x[1])})==1)
length(pr_betflop[which(lapply(pr_betflop,function(x){grep('przemol: checks',x[1])})==1)])
#which(lapply(pr_betflop,function(x){grep('przemol: posts big blind',x[1])})==1)
length(pr_betflop[which(lapply(pr_betflop,function(x){grep('przemol: posts big blind',x[1])})==1)])
# sergey201134
se= lapply(betflop,function(x){grep('sergey201134: bets',x[2])})
se_betflop= betflop[which(pr==1)]
length(se_betflop)
#which(lapply(se_betflop,function(x){grep('sergey201134: raises',x[1])})==1)
length(se_betflop[which(lapply(se_betflop,function(x){grep('sergey201134: raises',x[1])})==1)])
#which(lapply(pr_betflop,function(x){grep('sergey201134: calls',x[1])})==1)
length(se_betflop[which(lapply(se_betflop,function(x){grep('sergey201134: calls',x[1])})==1)])
#which(lapply(se_betflop,function(x){grep('sergey201134: checks',x[1])})==1)
length(se_betflop[which(lapply(se_betflop,function(x){grep('sergey201134: checks',x[1])})==1)])
#which(lapply(se_betflop,function(x){grep('sergey201134: posts big blind',x[1])})==1)
length(se_betflop[which(lapply(se_betflop,function(x){grep('sergey201134: posts big blind',x[1])})==1)])
# sergey201134
se= lapply(betflop,function(x){grep('sergey201134: bets',x[2])})
se_betflop= betflop[which(se==1)]
length(se_betflop)
#which(lapply(se_betflop,function(x){grep('sergey201134: raises',x[1])})==1)
length(se_betflop[which(lapply(se_betflop,function(x){grep('sergey201134: raises',x[1])})==1)])
#which(lapply(pr_betflop,function(x){grep('sergey201134: calls',x[1])})==1)
length(se_betflop[which(lapply(se_betflop,function(x){grep('sergey201134: calls',x[1])})==1)])
#which(lapply(se_betflop,function(x){grep('sergey201134: checks',x[1])})==1)
length(se_betflop[which(lapply(se_betflop,function(x){grep('sergey201134: checks',x[1])})==1)])
#which(lapply(se_betflop,function(x){grep('sergey201134: posts big blind',x[1])})==1)
length(se_betflop[which(lapply(se_betflop,function(x){grep('sergey201134: posts big blind',x[1])})==1)])
which(lapply(se_betflop,function(x){grep('sergey201134: raises',x[1])})==1)
which(lapply(pr_betflop,function(x){grep('sergey201134: calls',x[1])})==1)
length(se_betflop[which(lapply(se_betflop,function(x){grep('sergey201134: raises',x[1])})==1)])
#which(lapply(pr_betflop,function(x){grep('sergey201134: calls',x[1])})==1)
length(se_betflop[which(lapply(se_betflop,function(x){grep('sergey201134: calls',x[1])})==1)])
which(lapply(pr_betflop,function(x){grep('sergey201134: calls',x[1])})==1)
which(lapply(se_betflop,function(x){grep('sergey201134: calls',x[1])})==1)
se_betflop[7]
se_betflop[7:8]
# bigruboss69
bi= lapply(betflop,function(x){grep('bigruboss69: bets',x[2])})
bi_betflop= betflop[which(bi==1)]
length(bi_betflop)
#which(lapply(bi_betflop,function(x){grep('bigruboss69: raises',x[1])})==1)
length(bi_betflop[which(lapply(bi_betflop,function(x){grep('bigruboss69: raises',x[1])})==1)])
#which(lapply(bi_betflop,function(x){grep('bigruboss69: calls',x[1])})==1)
length(bi_betflop[which(lapply(bi_betflop,function(x){grep('bigruboss69: calls',x[1])})==1)])
#which(lapply(bi_betflop,function(x){grep('bigruboss69: checks',x[1])})==1)
length(bi_betflop[which(lapply(bi_betflop,function(x){grep('bigruboss69: checks',x[1])})==1)])
#which(lapply(bi_betflop,function(x){grep('bigruboss69: posts big blind',x[1])})==1)
length(bi_betflop[which(lapply(bi_betflop,function(x){grep('bigruboss69: posts big blind',x[1])})==1)])
which(lapply(bi_betflop,function(x){grep('bigruboss69: raises',x[1])})==1)
which(lapply(bi_betflop,function(x){grep('bigruboss69: calls',x[1])})==1)
se_betflop[13,15]
bi_betflop[13]
bi_betflop[15]
# valterghetti
va= lapply(betflop,function(x){grep('valterghetti: bets',x[2])})
va_betflop= betflop[which(va==1)]
length(va_betflop)
length(va_betflop[which(lapply(va_betflop,function(x){grep('valterghetti: raises',x[1])})==1)])
length(va_betflop[which(lapply(va_betflop,function(x){grep('valterghetti: calls',x[1])})==1)])
length(va_betflop[which(lapply(va_betflop,function(x){grep('valterghetti: checks',x[1])})==1)])
length(va_betflop[which(lapply(va_betflop,function(x){grep('valterghetti: posts big blind',x[1])})==1)])
which(lapply(va_betflop,function(x){grep('valterghetti: raises',x[1])})==1)
which(lapply(va_betflop,function(x){grep('valterghetti: calls',x[1])})==1)
which(lapply(va_betflop,function(x){grep('valterghetti: checks',x[1])})==1)
which(lapply(va_betflop,function(x){grep('valterghetti: posts big blind',x[1])
>
which(lapply(va_betflop,function(x){grep('valterghetti: posts big blind',x[1])})==1)
va_betflop[1]
va_betflop[7]
# gary0687
ga= lapply(betflop,function(x){grep('gary0687: bets',x[2])})
ga_betflop= betflop[which(ga==1)]
length(ga_betflop)
which(lapply(ga_betflop,function(x){grep('gary0687: raises',x[1])})==1)
length(ga_betflop[which(lapply(ga_betflop,function(x){grep('gary0687: raises',x[1])})==1)])
which(lapply(ga_betflop,function(x){grep('gary0687: calls',x[1])})==1)
length(ga_betflop[which(lapply(ga_betflop,function(x){grep('gary0687: calls',x[1])})==1)])
which(lapply(ga_betflop,function(x){grep('gary0687: checks',x[1])})==1)
length(ga_betflop[which(lapply(ga_betflop,function(x){grep('gary0687: checks',x[1])})==1)])
which(lapply(ga_betflop,function(x){grep('gary0687: posts big blind',x[1])})==1)
length(ga_betflop[which(lapply(ga_betflop,function(x){grep('gary0687: posts big blind',x[1])})==1)])
# patriot424
pa= lapply(betflop,function(x){grep('patriot424: bets',x[2])})
pa_betflop= betflop[which(pa==1)]
length(pa_betflop)
which(lapply(pa_betflop,function(x){grep('patriot424: raises',x[1])})==1)
length(pa_betflop[which(lapply(pa_betflop,function(x){grep('patriot424: raises',x[1])})==1)])
which(lapply(pa_betflop,function(x){grep('patriot424: calls',x[1])})==1)
length(pa_betflop[which(lapply(pa_betflop,function(x){grep('patriot424: calls',x[1])})==1)])
which(lapply(pa_betflop,function(x){grep('patriot424: checks',x[1])})==1)
length(pa_betflop[which(lapply(pa_betflop,function(x){grep('patriot424: checks',x[1])})==1)])
which(lapply(pa_betflop,function(x){grep('patriot424: posts big blind',x[1])})==1)
length(pa_betflop[which(lapply(pa_betflop,function(x){grep('patriot424: posts big blind',x[1])})==1)])
pa_betflop[20]
pa_betflop[29]
# patriot424
pa= lapply(betflop,function(x){grep('patriot424: bets',x[2])})
pa_betflop= betflop[which(pa==1)]
length(pa_betflop)
# nielsen604
ni= lapply(betflop,function(x){grep('patriot424: bets',x[2])})
ni_betflop= betflop[which(ni==1)]
length(ni_betflop)
# nielsen604
ni= lapply(betflop,function(x){grep('nielsen604: bets',x[2])})
ni_betflop= betflop[which(ni==1)]
length(ni_betflop)
which(lapply(ni_betflop,function(x){grep('nielsen604: raises',x[1])})==1)
length(ni_betflop[which(lapply(ni_betflop,function(x){grep('nielsen604: raises',x[1])})==1)])
which(lapply(ni_betflop,function(x){grep('nielsen604: calls',x[1])})==1)
length(ni_betflop[which(lapply(ni_betflop,function(x){grep('nielsen604: calls',x[1])})==1)])
which(lapply(ni_betflop,function(x){grep('nielsen604: checks',x[1])})==1)
length(ni_betflop[which(lapply(ni_betflop,function(x){grep('nielsen604: checks',x[1])})==1)])
which(lapply(ni_betflop,function(x){grep('nielsen604: posts big blind',x[1])})==1)
length(ni_betflop[which(lapply(ni_betflop,function(x){grep('nielsen604: posts big blind',x[1])})==1)])
ni_betflop[38]
ni_betflop[54]
ni_betflop[54]
# savanta81
sa= lapply(betflop,function(x){grep('savanta81: bets',x[2])})
sa_betflop= betflop[which(sa==1)]
length(sa_betflop)
which(lapply(sa_betflop,function(x){grep('savanta81: raises',x[1])})==1)
length(sa_betflop[which(lapply(sa_betflop,function(x){grep('savanta81: raises',x[1])})==1)])
which(lapply(sa_betflop,function(x){grep('savanta81: calls',x[1])})==1)
length(sa_betflop[which(lapply(sa_betflop,function(x){grep('savanta81: calls',x[1])})==1)])
sa_betflop[3]
sa_betflop[26]
# NIK_DEPUTAT
NI= lapply(betflop,function(x){grep('NIK_DEPUTAT: bets',x[2])})
NI_betflop= betflop[which(NI==1)]
length(NI_betflop)
which(lapply(NI_betflop,function(x){grep('NIK_DEPUTAT: raises',x[1])})==1)
length(NI_betflop[which(lapply(NI_betflop,function(x){grep('NIK_DEPUTAT: raises',x[1])})==1)])
which(lapply(NI_betflop,function(x){grep('NIK_DEPUTAT: calls',x[1])})==1)
length(NI_betflop[which(lapply(NI_betflop,function(x){grep('NIK_DEPUTAT: calls',x[1])})==1)])
which(lapply(NI_betflop,function(x){grep('NIK_DEPUTAT: checks',x[1])})==1)
length(NI_betflop[which(lapply(NI_betflop,function(x){grep('NIK_DEPUTAT: checks',x[1])})==1)])
which(lapply(NI_betflop,function(x){grep('NIK_DEPUTAT: posts big blind',x[1])})==1)
length(NI_betflop[which(lapply(NI_betflop,function(x){grep('NIK_DEPUTAT: posts big blind',x[1])})==1)])
CBetF=c(2/3, 3/4, 7/8, 26/31, 19/25, 3/17 31/38, 17/55, 28/48, 11/39)
#df
Players=c("aku08","przemol","sergey201134","bigruboss69","valterghetti","gary0687","patriot424","nielsen604","savanta81","NIK_DEPUTAT")
CBetF=c(2/3, 3/4, 7/8, 26/31, 19/25, 3/17, 31/38, 17/55, 28/48, 11/39)
data.frame(Players,CBetF)
help("data.frame")
CBetFs= data.frame(Players,CBetF)
CBetFs
# packages
library(readtext)
library(stringr)
library(dplyr)
library(tidyr)
library(cluster)
library(xtable)
library(plyr)
library(car)
library(lattice)
# packages
library(readtext)
library(stringr)
library(plyr)
library(dplyr)
library(tidyr)
library(cluster)
library(xtable)
library(car)
library(lattice)
# Read＃所有txt讀進來
poker<-readtext("D:/_PROJECT_/Data_Red/*.txt")
#poker<-readtext("~/Desktop/POKER/*.txt")
poker
poker$text[1]
#分局＃切割
#help('strsplit')
#strsplit(poker$text,"\n\n\n\n", fixed = TRUE,useBytes = TRUE)
#合併所有txt內賽局
u<-unlist(strsplit(poker$text,"\n\n\n\n", fixed = TRUE,useBytes = TRUE))
# packages
library(readtext)
library(stringr)
library(plyr)
library(dplyr)
library(tidyr)
library(cluster)
library(xtable)
library(car)
library(lattice)
# Read＃所有txt讀進來
poker<-readtext("D:/_PROJECT_/Data_Red/*.txt")
#poker<-readtext("~/Desktop/POKER/*.txt")
poker
poker$text[1]
#分局＃切割
#help('strsplit')
#strsplit(poker$text,"\n\n\n\n", fixed = TRUE,useBytes = TRUE)
#合併所有txt內賽局
u<-unlist(strsplit(poker$text,"\n\n\n\n", fixed = TRUE,useBytes = TRUE))
u[1]
str(u)
str(u)
game<-lapply(u,function(xi)unlist(strsplit(xi,"\n*** SUMMARY ***", fixed = TRUE,useBytes = TRUE)))
nosum= list()
#*** SUMMARY ***分割後取上半部分 ------------
game_nosum= lapply(game, function(x){append(nosum, x[1])})
nosum_new= unlist(lapply(game, function(x){append(nosum, x[1])}))
nosum_new<-lapply(nosum_new,function(xi)unlist(strsplit(xi,"posts small blind", fixed = TRUE,useBytes = TRUE)))
nosum_new<-lapply(nosum_new,function(xi)unlist(strsplit(xi,"\n*** TURN ***", fixed = TRUE,useBytes = TRUE)))
#截出posts small blind、*** FLOP ***、*** TURN *** ------------
game_nosum=unlist(game_nosum)
game_nosum<-lapply(game_nosum,function(xi)unlist(strsplit(xi,"posts small blind", fixed = TRUE,useBytes = TRUE)))
#small_blind[1]檢視
game_nosum<-lapply(game_nosum,function(xi)unlist(strsplit(xi,"\n*** FLOP ***", fixed = TRUE,useBytes = TRUE)))
game_nosum<-lapply(game_nosum,function(xi)unlist(strsplit(xi,"\n*** TURN ***", fixed = TRUE,useBytes = TRUE)))
#-----------hole card--人名次數（有玩的局數）---------
poker_name <- c("aku08","przemol","sergey201134","bigruboss69","valterghetti",
"gary0687","patriot424","nielsen604","savanta81","NIK_DEPUTAT")
gamelist=list()
for (q in poker_name) {#抓人名q: 出現次數
holecard_nb= lapply(game_nosum,function(x){grep(paste0(q,": "),x[2])})
holecard_nb= game_nosum[which(holecard_nb==1)]
k<-length(holecard_nb)
gamelist=append(gamelist,k) }
#gamelist
#---------flop---人名次數（有玩到flop的局數）--------------
floplist=list()
for (q in poker_name){
flop_nb= lapply(game_nosum,function(x){grep(paste0(q,": "),x[3])})
flop_nb= game_nosum[which(flop_nb==1)]
a<-length(flop_nb)
floplist=append(floplist,a)}
#floplist
#---------hole card--folds退出數-----------------
Hfoldlist=list()
for (q in poker_name){
Hfold_nb= lapply(game_nosum,function(x){grep(paste0(q,": folds"),x[2])})
Hfold_nb= game_nosum[which(Hfold_nb==1)]
a<-length(Hfold_nb)
Hfoldlist=append(Hfoldlist,a)}
# unlist(Hfoldlist)
#-----------flop----folds退出數-----------
Ffoldlist=list()
for (q in poker_name){
Ffold_nb= lapply(game_nosum,function(x){grep(paste0(q,": folds"),x[3])})
Ffold_nb= game_nosum[which(Ffold_nb==1)]
a<-length(Ffold_nb)
Ffoldlist=append(Ffoldlist,a)}
#Fffoldlist=list() turn有玩的（確認）
#for (q in poker_name){
#  Fffold_nb= lapply(game_nosum,function(x){grep(paste0(q),x[4])})
#  Fffold_nb= game_nosum[which(Fffold_nb==1)]
#  a<-length(Fffold_nb)
#  Fffoldlist=append(Fffoldlist,a)}
#--------hole card直接贏的次數----------------
Hwinlist=list()
for (q in poker_name){
Hwin_nb= lapply(game_nosum,function(x){grep(paste0(q," collected"),x[2])})
Hwin_nb= game_nosum[which(Hwin_nb==1)]
a<-length(Hwin_nb)
Hwinlist=append(Hwinlist,a)}
#Hwinlist
#------flop換行切割
only_flop= list()
only_flop= lapply(game_nosum, function(x){append(only_flop, x[3])})
#str(only_flop)
flopspl<-lapply(only_flop,function(xi){unlist(strsplit(unlist(xi),"\n", fixed = TRUE,useBytes = TRUE))})
flopspl
str(flopspl)
#------flop有raises
Fraiseslist=list()
for (q in poker_name){
Fraises_nb= lapply(game_nosum,function(x){grep(paste0(q,": raises"),x[3])})
Fraises_nb= game_nosum[which(Fraises_nb==1)]
a<-length(Fraises_nb)
Fraiseslist<-append(Fraiseslist,a)}
#------preflop
preflop= list()
preflop= unlist(lapply(nosum_new, function(x){append(preflop, x[2])}))
preflop <-lapply(preflop,function(xi)unlist(strsplit(xi,"\n*** FLOP ***", fixed = TRUE,useBytes = TRUE)))
#head(preflop)
length(preflop)
#有玩的局
#=============
cbet2list=list()
cbet2_1list=list()
for (q in poker_name){
pf= lapply(preflop ,function(x){grep(paste0(q,": "),x)}) #找有玩
pf2= preflop[which(pf!='integer(0)')]#有玩
gr= lapply(pf2, function(x){grep(paste0(q,": raises"),x[1])})#preflop有raises邏輯式
gr2= pf2[which(gr==1)]#有的
k=lapply(gr2,function(xi)unlist(strsplit(xi[1],paste0(q,": raises"),fixed = TRUE,useBytes = TRUE)))#以玩家raise切割
r= lapply(k, function(x){grep('raises',last(x))})#最後一個raises之後
rLR_nb= which(r=='integer(0)')#沒有raises的
rpf=gr2[rLR_nb]#pre玩家是最後raises，完整pre+flop
a<-length(rpf)
#=========
rpf_bl= lapply(rpf, function(x){grep(paste0(q,": bets"),x[2])})
a_1=length(which(rpf_bl!='integer(0)'))
#=========
#-------------------
bbl= lapply(pf2 ,function(x){grep(paste0(q,": posts big blind"),x)})#找是posts big blind局
bb= pf2[which(bbl==1)]#玩家是big blind的pre+flop局
bbrl= lapply(bb, function(x){grep('raises',x[1])})#pre有raises
bbr= which(bbrl =='integer(0)')
bbrg= bb[bbr]#玩家是big blind後面沒有人raises的pre+flop局
bbbl= lapply(bbrg ,function(x){grep('bets',x[1])})
bbbl#玩家是最後raises，完整pre+flop
bbrbg= bbrg[which(bbbl=='integer(0)')]#玩家是big blind後面沒有人raises或bets的pre+flop局
b<-length(bbrbg)
cbet2list=append(cbet2list,a + b)
#=========
bbrbg_bl= lapply(bbrbg, function(x){grep(paste0(q,": bets"),x[2])})
b_1=length(which( bbrbg_bl!='integer(0)'))
cbet2_1list=append(cbet2_1list,a_1 + b_1)
#=========
}
cbet2list
cbet2_1list
#cbet
cbet2list=unlist(cbet2list)
cbet2_1list=unlist(cbet2_1list)
CBiF= as.vector(cbet2_1list)/as.vector(cbet2list) #C-Bet in Flop
#flop蓋牌率
floplist=unlist(floplist)#有玩到flop的局數
Ffoldlist=unlist(Ffoldlist)
